from numpy import *
from scipy import stats

dataFile = 'D:/workspace/semantic-matching/Python/combine-evaluation.dat'
dataIn = loadtxt(dataFile)
dataT = dataIn.transpose()
wSum = dataT[0:99]
wProduct = dataT[99:198]
wF = dataT[198:298]

def countRanks(ranks):
    """
    count the particular rank numbers generated by single algorithm.
    """
    i = 0
    counts = []
    counts.append(i)
    while i < 99:
        k = i
        for j in range(i,99):
            rCor = stats.stats.kendalltau(ranks[i], ranks[j])[0] 
            if rCor > 0.999999:
                k = k + 1
        i = k
        if k < 99:
            counts.append(k)
    return counts

countSum = countRanks(wSum)
countProduct = countRanks(wProduct)
countF = countRanks(wF)
print 'No ranks sum:', len(countSum)
print 'No ranks product', len(countProduct)
print 'No ranks f', len(countF)

def compareRanks(rank1,rank2,count1,count2):
    """
    compare and count how many rank overlap between two algorithms.
    """
    overlap = 0
    for i in count1:
        for j in count2:
            rCor = stats.stats.kendalltau(rank1[i],rank2[j])[0]
            if rCor > 0.999999:
                overlap = overlap + 1
                break
    return overlap

print 'Overlap Sum and Product: ', compareRanks(wSum,wProduct,countSum,countProduct)
print 'Overlap Sum and F: ', compareRanks(wSum,wF,countSum,countF)
print 'Overlap Product and F: ', compareRanks(wProduct,wF,countSum,countF)
 




